<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\SmartBox.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\SmartBox.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Fri Jun 19 00:00:46 2015
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PcdRequest &rArr; PcdComMF522 &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e0ed08]">Reset_Handler</a>
 <LI><a href="#[e0eccc]">NMI_Handler</a>
 <LI><a href="#[e0ec90]">HardFault_Handler</a>
 <LI><a href="#[e0ec54]">MemManage_Handler</a>
 <LI><a href="#[e0ec18]">BusFault_Handler</a>
 <LI><a href="#[e0ebdc]">UsageFault_Handler</a>
 <LI><a href="#[e0eba0]">SVC_Handler</a>
 <LI><a href="#[e0eb64]">DebugMon_Handler</a>
 <LI><a href="#[e0eb28]">PendSV_Handler</a>
 <LI><a href="#[e0eaec]">SysTick_Handler</a>
 <LI><a href="#[e0e0d8]">WWDG_IRQHandler</a>
 <LI><a href="#[e0e588]">PVD_IRQHandler</a>
 <LI><a href="#[e0e420]">TAMPER_IRQHandler</a>
 <LI><a href="#[e0e4d4]">RTC_IRQHandler</a>
 <LI><a href="#[e0e6b4]">FLASH_IRQHandler</a>
 <LI><a href="#[e0e54c]">RCC_IRQHandler</a>
 <LI><a href="#[e0e858]">EXTI0_IRQHandler</a>
 <LI><a href="#[e0e7e0]">EXTI1_IRQHandler</a>
 <LI><a href="#[e0e7a4]">EXTI2_IRQHandler</a>
 <LI><a href="#[e0e768]">EXTI3_IRQHandler</a>
 <LI><a href="#[e0e72c]">EXTI4_IRQHandler</a>
 <LI><a href="#[e0e9fc]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[e0e9c0]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[e0e984]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[e0e948]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[e0e90c]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[e0e8d0]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[e0e894]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[e0eab0]">ADC1_2_IRQHandler</a>
 <LI><a href="#[e0e150]">USB_HP_CAN1_TX_IRQHandler</a>
 <LI><a href="#[e0e114]">USB_LP_CAN1_RX0_IRQHandler</a>
 <LI><a href="#[e0ea74]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[e0ea38]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[e0e6f0]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[e0e3e4]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[e0e330]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[e0e36c]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[e0e3a8]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[14730c8]">TIM2_IRQHandler</a>
 <LI><a href="#[14720d8]">TIM3_IRQHandler</a>
 <LI><a href="#[e0e27c]">TIM4_IRQHandler</a>
 <LI><a href="#[e0e63c]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[e0e678]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[e0e5c4]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[e0e600]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[e0e498]">SPI1_IRQHandler</a>
 <LI><a href="#[e0e45c]">SPI2_IRQHandler</a>
 <LI><a href="#[e0e240]">USART1_IRQHandler</a>
 <LI><a href="#[1471034]">USART2_IRQHandler</a>
 <LI><a href="#[e0e1c8]">USART3_IRQHandler</a>
 <LI><a href="#[e0e81c]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[e0e510]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[e0e18c]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[146acd4]">main</a>
 <LI><a href="#[e0f0c8]">SystemInit</a>
 <LI><a href="#[146aa04]">__main</a>
 <LI><a href="#[19f7dcc]">_sputc</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[146aa04]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[19f59b4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[19f5888]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[19f4c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[19f584c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[19f4c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[19f575c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[e0ed08]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eccc]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ec90]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ec54]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ec18]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ebdc]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eba0]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eb64]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eb28]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eaec]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0eab0]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ea74]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0ea38]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e9fc]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e9c0]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e984]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e948]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e90c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e8d0]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e894]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e858]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e81c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e7e0]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e7a4]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e768]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e72c]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e6f0]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e6b4]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e678]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e63c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e600]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e5c4]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e588]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e54c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e510]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e4d4]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e498]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e45c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e420]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e3e4]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e3a8]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e36c]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e330]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e27c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e240]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e1c8]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e18c]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e150]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e114]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0e0d8]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19f5324]"></a>__aeabi_uldivmod</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f4910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[19f4a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[19f7ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19f4c58]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f584c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[19f5888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[19f4c1c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[19f4a3c]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19f5324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[19f4a00]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[19f4910]"></a>__aeabi_llsr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19f5324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[19f48d4]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1473de8]"></a>BspInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp.o(i.BspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BspInit &rArr; InitNRF522Func &rArr; InitNRF522Pin &rArr; InitSPIcommon &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1473bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Func
<LI><a href="#[1473c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKey
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
<LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
<LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
<LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[1473d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[1473dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1473cbc]"></a>BspTim2Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bsptime2.o(i.BspTim2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BspTim2Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e038cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e0d3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[14e8480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[14e85e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[14e8f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[14e93f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[14e9524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[146f888]"></a>BuildData</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, lcd12864.o(i.BuildData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
<LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
</UL>

<P><STRONG><a name="[146c228]"></a>ClearBitMask</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, nrf522.o(i.ClearBitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[146bf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
</UL>

<P><STRONG><a name="[146c1ec]"></a>Delay</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, nrf522.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[146bee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[146c0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
</UL>

<P><STRONG><a name="[1473c80]"></a>DisplayInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd12864.o(i.DisplayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DisplayInit &rArr; InitLcd &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146f75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
<LI><a href="#[146f84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[146ad88]"></a>DisplayKey</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, main.o(i.DisplayKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DisplayKey &rArr; SetCursor &rArr; LcdWcom &rArr; BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[146f798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146ad4c]"></a>DisplayStr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(i.DisplayStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DisplayStr &rArr; SetCursor &rArr; LcdWcom &rArr; BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[146f798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e09074]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e08f48]"></a>FLASH_SetLatency</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[1473dac]"></a>GPIO_Configuration</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[e06eb4]"></a>GPIO_Init</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[146c1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Pin
<LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
<LI><a href="#[146f84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[1473c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKey
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
<LI><a href="#[1473dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[e06d10]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[146bee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
<LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
<LI><a href="#[146f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildData
<LI><a href="#[147074c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLock
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
<LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
</UL>

<P><STRONG><a name="[e06cd4]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[146bee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
<LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
<LI><a href="#[146f84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[146f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildData
<LI><a href="#[147074c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLock
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
<LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
</UL>

<P><STRONG><a name="[1473c44]"></a>InOutControlInit</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, inoutcontrol.o(i.InOutControlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InOutControlInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14e2684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[14e2990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[1473c08]"></a>InitKey</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, key.o(i.InitKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InitKey &rArr; InitSPIcommon &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[146f84c]"></a>InitLcd</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, lcd12864.o(i.InitLcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitLcd &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
</UL>

<P><STRONG><a name="[1473bcc]"></a>InitNRF522Func</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf522.o(i.InitNRF522Func))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = InitNRF522Func &rArr; InitNRF522Pin &rArr; InitSPIcommon &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[146bee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[146c0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[146c1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Pin
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[146c1b0]"></a>InitNRF522Pin</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, nrf522.o(i.InitNRF522Pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InitNRF522Pin &rArr; InitSPIcommon &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
</UL>
<BR>[Called By]<UL><LI><a href="#[1473bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Func
</UL>

<P><STRONG><a name="[146ea3c]"></a>InitSPIcommon</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, key.o(i.InitSPIcommon))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitSPIcommon &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e03854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e038cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e06eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14e2684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[14e2990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[146c1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Pin
<LI><a href="#[1473c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKey
</UL>

<P><STRONG><a name="[146f810]"></a>LcdWcom</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd12864.o(i.LcdWcom))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LcdWcom &rArr; BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146f75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[146f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildData
</UL>
<BR>[Called By]<UL><LI><a href="#[146f798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCursor
<LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
</UL>

<P><STRONG><a name="[146f7d4]"></a>LcdWdata</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd12864.o(i.LcdWdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LcdWdata &rArr; BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146f75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[146f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuildData
</UL>
<BR>[Called By]<UL><LI><a href="#[146ad4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStr
<LI><a href="#[146ad88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKey
</UL>

<P><STRONG><a name="[1473d70]"></a>NVIC_Configuration</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[e0d37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[e0d3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[e0d3f4]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[e0d3b8]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1473d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[e0d37c]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[1473d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[147074c]"></a>OpenLock</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, inoutcontrol.o(i.OpenLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OpenLock &rArr; SPIByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1470710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByte
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146c0fc]"></a>PcdAntennaOn</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nrf522.o(i.PcdAntennaOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PcdAntennaOn &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[146c1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1473bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Func
</UL>

<P><STRONG><a name="[146c084]"></a>PcdAnticoll</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, nrf522.o(i.PcdAnticoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PcdAnticoll &rArr; PcdComMF522 &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146bfd0]"></a>PcdComMF522</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, nrf522.o(i.PcdComMF522))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PcdComMF522 &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
<LI><a href="#[146c228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[146bf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[146c084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
</UL>

<P><STRONG><a name="[146bf1c]"></a>PcdRequest</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, nrf522.o(i.PcdRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PcdRequest &rArr; PcdComMF522 &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146bee0]"></a>PcdReset</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, nrf522.o(i.PcdReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PcdReset &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146c1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1473bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Func
</UL>

<P><STRONG><a name="[e038cc]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
<LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[e03890]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14e93f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[e03854]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[146c1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNRF522Pin
<LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
<LI><a href="#[146f84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[1473c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitKey
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
<LI><a href="#[1473dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
</UL>

<P><STRONG><a name="[e06be4]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14e93f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[1473cf8]"></a>RCC_Configuration</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, bsp.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_Configuration &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e0323c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[e032b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[e03368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[e033a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[e033e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK2Config
<LI><a href="#[e0341c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLK1Config
<LI><a href="#[e03584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[e035c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[e035fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[e03674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[e036ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[e08f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[e09074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
</UL>

<P><STRONG><a name="[e036ec]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e03674]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e0323c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e035fc]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e035c0]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e03584]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e0341c]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK1Config))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e033e0]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PCLK2Config))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e033a4]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e03368]"></a>RCC_PLLConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e032b4]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e0323c]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[e03674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1473cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[146bdf0]"></a>ReadRawRC</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nrf522.o(i.ReadRawRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146bd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[146c228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>

<P><STRONG><a name="[1470710]"></a>SPIByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, inoutcontrol.o(i.SPIByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPIByte
</UL>
<BR>[Calls]<UL><LI><a href="#[14e26c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[14e26fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[14e27b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[147074c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLock
</UL>

<P><STRONG><a name="[14e2990]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
</UL>

<P><STRONG><a name="[14e27b0]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[146bd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteRead
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[1470710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByte
</UL>

<P><STRONG><a name="[14e26fc]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[146bd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteRead
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[1470710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByte
</UL>

<P><STRONG><a name="[14e26c0]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[146bd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteRead
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[1470710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIByte
</UL>

<P><STRONG><a name="[14e2684]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[146ea3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIcommon
<LI><a href="#[1473c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InOutControlInit
</UL>

<P><STRONG><a name="[146bdb4]"></a>SetBitMask</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, nrf522.o(i.SetBitMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>
<BR>[Called By]<UL><LI><a href="#[146bf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[146c0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
</UL>

<P><STRONG><a name="[146f798]"></a>SetCursor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd12864.o(i.SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetCursor &rArr; LcdWcom &rArr; BuildData
</UL>
<BR>[Calls]<UL><LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
</UL>
<BR>[Called By]<UL><LI><a href="#[146ad4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStr
<LI><a href="#[146ad88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKey
</UL>

<P><STRONG><a name="[146bd78]"></a>SpiWriteRead</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, nrf522.o(i.SpiWriteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[14e26c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[14e26fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[14e27b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[146bd3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteRawRC
<LI><a href="#[146bdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRawRC
</UL>

<P><STRONG><a name="[e0f0c8]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[e10130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[14730c8]"></a>TIM2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsptime2.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14e9038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[14e9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14720d8]"></a>TIM3_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsptime3.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14e9038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[14e9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14e9650]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14720d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[14730c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[14e9524]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[14e93f8]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e03890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[e06be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[14e9038]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14720d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[14730c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[14e8f48]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[14e85e8]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[14e8480]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[1473cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspTim2Init
</UL>

<P><STRONG><a name="[1471034]"></a>USART2_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bspusart1.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[14e521c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[14e5474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[14e5618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14e5618]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1471034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[14e5474]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1471034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[14e521c]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1471034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[146bd3c]"></a>WriteRawRC</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, nrf522.o(i.WriteRawRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[146bd78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[146bdb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitMask
<LI><a href="#[146bee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdReset
<LI><a href="#[146bf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[146bfd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdComMF522
<LI><a href="#[146c084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[146c0fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAntennaOn
<LI><a href="#[146c228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBitMask
</UL>

<P><STRONG><a name="[19f7b74]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f7dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[19f7ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19f7b38]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[19f7afc]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19f4370]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[19f4334]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[19f42f8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[146f75c]"></a>delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd12864.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[146f7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWdata
<LI><a href="#[146f810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWcom
<LI><a href="#[1473c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayInit
</UL>

<P><STRONG><a name="[146acd4]"></a>main</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; PcdRequest &rArr; PcdComMF522 &rArr; SetBitMask &rArr; WriteRawRC &rArr; SpiWriteRead
</UL>
<BR>[Calls]<UL><LI><a href="#[146ad4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayStr
<LI><a href="#[146ad88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKey
<LI><a href="#[146bf1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdRequest
<LI><a href="#[146c084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PcdAnticoll
<LI><a href="#[146ea00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scankey
<LI><a href="#[147074c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenLock
<LI><a href="#[1473de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit
<LI><a href="#[19f7afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[146ea00]"></a>scankey</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, key.o(i.scankey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = scankey
</UL>
<BR>[Calls]<UL><LI><a href="#[e06cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e06d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[14e26c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[14e26fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[14e27b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[146acd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[e10130]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[e100f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[e0f0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e100f4]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Called By]<UL><LI><a href="#[e10130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[19f7ebc]"></a>_printf_core</STRONG> (Thumb, 1106 bytes, Stack size 128 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f5324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[19f7e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[19f7e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[19f7b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>

<P><STRONG><a name="[19f7e80]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19f7ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19f7e44]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19f7ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[19f7dcc]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[19f7b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
